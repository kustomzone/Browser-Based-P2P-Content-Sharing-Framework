a
a(1,1)
a[1,1]
class(a[1,1])
x <- list(2, "a", "b", TRUE)
x[[2]]
x[2]
class(a[[2]])
class(x[[2]])
data
print data
data <- read.csv("/home/shikhar/GIT/dataScienceCoursera/R/Week1/hw1_data.csv");
data
data[1:2,]
data.size()
size(data)
dim(data)
data[-1,]
data[151:152,]
data[151:153,]
data[0,]
a[0,0]
a[1,1]
a
a[3,2]
data[151:153,]
data[47,]
a <- is.na(data[,1])
a <- is.na(data[,1])
a[0,1]
a[1]
b <- 0+ a[1]
b
b<-sum(a)
b
c
d
d <- sum(data[[,1][a]])
d <- sum(data[[,1][a]])
d
d <- sum(data[[,1][a]])
d <- sum(data[[,1])
data[[,1]]
data[,1]
a
data[,1][!a]
d
d <- data[,1][!a]
d
d
d <- sum(data[,1][!a])
d
avg <- d/(153-37)
avg
nrow(Data)
Data <- read.csv("/home/shikhar/GIT/dataScienceCoursera/R/Week1/hw1_data.csv");
Data[1:2,]
View(data)
Data <- read.csv("/home/shikhar/GIT/dataScienceCoursera/R/Week1/hw1_data.csv");
Data[1:2,]
dim(Data)
data[47,]
nrow(Data)
dim(Data,1)
dim(Data)[1]
nrow(Data)
Data[len-1:len,]
len <- nrow(Data)
Data[len-1:len,]
len <- nrow(Data)
Data[len-1:len,]
Data[152:153,]
Data[len-1:len,]
Data[len,]
len-1
Data[(len-1):len,]
data[,1][!=NA]
Data[,1][!=NA]
Data[,1][==NA]
Data[,1][== NaN]
Data[,1][== 1]
(Data[,1])[== 1]
Data[,1][Data[,1] == NA]
nrow(Data[,1][Data[,1] == NA])
nrow(Data[,1][Data[,1] == NA])
Data[,1][Data[,1] == NA]
(Data[,1])[Data[,1] == NA]
Data[,1][Data[,1] == NaN]
Data[,1][is.na(Data[,1])]
nrow(Data[,1][is.na(Data[,1])])
dim(Data[,1][is.na(Data[,1])])
a <- (Data[,1][is.na(Data[,1])])
a
a <- ncow(Data[,1][is.na(Data[,1])])
a <- ncol(Data[,1][is.na(Data[,1])])
a <- ncol(Data[,1][is.na(Data[,1])])
a <- ncol(Data[,1][is.na(Data[,1])])
ncol(a)
length(a)
a
a <- (Data[,1][is.na(Data[,1])])
length(a)
length(Data[,1][is.na(Data[,1])])
firstNonNull <- Data[,1][!is.na(Data[,1])]
sum(firstNonNull)/length(firstNonNull)
SubData = Data[Data[,1]>31 & Data[,4]>90]
SubData <- Data[Data[,1]>31 & Data[,4]>90]
SubData <- Data[Data[,1]>31]
SubData <- Data[Data[,1]>31]
SubData <- Data[][Data[,1]>31]
SubData <- Data[,][Data[,1]>31]
SubData <- Data[,][Data[,1]>31]
data[[,1]]
SubData <- Data[,1][Data[,1]>31]
SubData <- Data[Data[,1]>31]
SubData <- Data[[Data[,1]>31]]
a <- Data[,1]>31
SubData <- Data[a]
SubData <- Data[a,]
SubData <- Data[Data[,1]>31,]
SubData
SubData <- Data[[1,2,3],]
SubData <- Data[c(1,2,3),]
SubData <- Data[c(1,2,3),]
SubData
Data[,1]>31
SubData <- Data[Data[,1]>31,1]
SubData
SubData <- Data[Data[,1]>31 & is.na(Data[,1]),1]
SubData
SubData
SubData <- Data[Data[,1]>31 & !is.na(Data[,1]),1]
SubData
SubData <- Data[cond1 & cond2]
SubData <- Data[cond1 & cond2,]
cond1 <- Data[,1]>31 & !is.na(Data[,1])
cond2 <- Data[,4]>90 & !is.na(Data[,4])
SubData <- Data[cond1 & cond2,]
SubData
sum(SubData)/nrow(SubData)
SubData <- Data[cond1 & cond2,2]
sum(SubData)/nrow(SubData)
sum(SubData)/legth(SubData)
sum(SubData)/length(SubData)
SubData <- Data[Data[,5]==6,4]
sum(SubData)/length(SubData)
max(Data[Data[,5]==5,1])
max(Data[Data[,5]==5 & !is.na(Data[,1]) ,1])
x <- 1:4
y <- 2:3
x+y
x
y
library("swirl")
swirl()
library("swirl")
install_course_zip("/home/shikhar/R/swirl_courses-master.zip", multi=TRUE,
which_course="R_Programming")
swirl()
5+7
x <- 5+7
x
yx-3
y<-x-3
y
z <- c(1.1,9,3.14)
?c
z
z <- c(z,555)
z
c(z,555,z)
k <- c(z,555,z)
k
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
mydiv <- z/my_sqrt
my_div <- z /my_sqrt
my_dic
my_div
z
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
mydiv <- z/my_sqrt
z*2+100
z * 2 + 100
z * 2 + 1000
my_div
1:20
pi:10
15:1
?':'
seq(1,20)
seq(1,20,by=.5)
seq(1,10,by=.5)
seq(1,10,by=0.5)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,40)
rep(0,times =40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
num_vect <1
tf <- num_vect <1
tf
num_vect >= 6
my_char <- c( "My", "name", "is")
my_char
swirl()
a
c(1,1,1)
(my_char, collapse = " ")
paste(my_char, collapse = " ")
my_name <- c(my_char,"Shikhar")
my_name
paste(my_name,collapse=" ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep = "-")
x<-c(44, NA, 5, NA)
x/3
x*3
t <- rnorm(1000)
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
y
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
print(my_data)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
Try x[c(-2, -10)]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <-c("foo", "bar", "norf")
identical(vect1,vect2)
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
x
exit
quit
exit()
quit()
x
c(1)
swirl()
x[1:10]
x[is.na(x)]
swirl()
my_vector <- 1:10
my_vector <- 1:0
my_vector <- 1:20
my_vector
dim(x = )
dim(x = )
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
length(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(nrow=4,ncol=5,1:20)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data
| <- data.frame(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
names <- c("patient", "age", "weight", "bp", "rating","test")
cnames <- c("patient", "age", "weight", "bp", "rating","test")
colnames(my_data) <- cnames
my_data
1
swirl()
TRUE == TRUE
(TRUE == TRUE) == TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
<=7
6<=7
10<=10
5!=7
!5==7
TRUE & TRUE
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6?4)
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints?5
ints >5
which(ints>7)
any(ints<0)
all(x>0)
all(ints>0)
head(flags)
View(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors <-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lappy(flag_shapes,rang)
lappy(flag_shapes,range)
lapply(flag_shapes,range)
sapply(flag_shapes,mean)
sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags,uniuq)
lapply(flags,unique)
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
swirl()
library("swirl")
swirl()
sapply(flasg,unique)
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags,unique)
sapply(flags,class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population, flags$red, summary)
ok()
tapply(flags$population, flags$landmass, summary)
1
a
?tapply
ind <- list(c(1, 2, 2), c("A", "A", "B"))
table(ind)
tapply(1:3, ind) #-> the split vector
tapply(1:3, ind, sum)
quit()
ind <- list(c(1, 2, 2), c("A", "A", "B"))
table(ind)
tapply(1:3, ind) #-> the split vector
tapply(1:3, ind, sum)
library(swirl)
swirl()
pollution <- read.csv("/home/shikhar/Desktop/airControl.csv", colClasses = c("numeric", "character","factor", "numeric", "numeric"))
pollution <- read.csv("/home/shikhar/Documents/Data\ Science/airControl.csv", colClasses = c("numeric", "character","factor", "numeric", "numeric"))
head(pollution)
boxplot(pm25 ~ region, data = pollution, col = "red")
boxplot(pm25 ~ region, data = pollution, col = "red")
pm ~ region
pm25
pollution.columsn
pollution.cols
pollution.cols()
pollution.columns()
pollution.column()
pollution.columns
cols(polluiont)
cols(pollution)
col(pollution)
View(pollution)
boxplot(pm25 ~ region, data = pollution, col = "red")
boxplot(pm25 ~ region, data = pollution, col = "red")
par("mar")
par(mar=c(1,1,1,1))
boxplot(pm25 ~ region, data = pollution, col = "red")
boxplot( region ~ pm25, data = pollution, col = "red")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
hist(subset(pollution, region == "east")$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
hist(subset(pollution, region == "east")$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
subset(pollution, region == "east")$pm25
subset(pollution, region == "east")$pm25
with(pollution, plot(latitude, pm25))
with(pollution, plot(longitude, pm25))
example(points)
dev.cur()
dev.list
dev.list()
dev.list()
install.library("ggplot2")
install.library("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(datasets)
qplot(displ, hwy, data=mpg, facets = .~drv)
qplot(displ, hwy, data=mpg, col = drv)
theme_bw()
qplot(displ, hwy, data=mpg, col = drv)
g <- qplot(displ, hwy, data=mpg, col = drv)
g <- g + theme_bw()
print(g)
source("./getData.R")
df <- read.csv("/home/shikhar/Documents/Data_Science/
Datasets/household_power_consumption.txt",
sep=";")
df <- read.csv("/home/shikhar/Documents/Data_Science/Datasets/household_power_consumption.txt",
sep=";")
df <- read.csv("./Data_nofix_withDelay.csv")
df$joinTime <- df$joinTime/10
plot <- ggplot(df, aes(x=n)) +
#geom_point(aes(y = msg)) +
geom_line(aes(y = msg, linetype=strategy)) +
theme_bw() +
theme(legend.position = c(.2, .8)) +
scale_linetype_manual("FindSuccesor Strategy" ,labels = c("Strategy 1", "Strategy 2"), values = c("dashed", "solid")) +
#ggtitle("Comparing find successor strategies") +
labs(y = "Number of messages exchanged", x = "Number of peers in network") +
ggsave(file="Comparing find successor strategies1.png",  width = 15.875, height=11.985625, units = "cm", dpi=300)
setwd("/media/shikhar/New Volume/Dropbox/Dropbox/LAB_6021/DTRM/Paper/Plots")
df <- read.csv("./Data_nofix_withDelay.csv")
df$joinTime <- df$joinTime/10
plot <- ggplot(df, aes(x=n)) +
#geom_point(aes(y = msg)) +
geom_line(aes(y = msg, linetype=strategy)) +
theme_bw() +
theme(legend.position = c(.2, .8)) +
scale_linetype_manual("FindSuccesor Strategy" ,labels = c("Strategy 1", "Strategy 2"), values = c("dashed", "solid")) +
#ggtitle("Comparing find successor strategies") +
labs(y = "Number of messages exchanged", x = "Number of peers in network") +
ggsave(file="Comparing find successor strategies1.png",  width = 15.875, height=11.985625, units = "cm", dpi=300)
print(plot)
library(ggplot2)
df <- read.csv("./Data_nofix_withDelay.csv")
df$joinTime <- df$joinTime/10
plot <- ggplot(df, aes(x=n)) +
#geom_point(aes(y = msg)) +
geom_line(aes(y = msg, linetype=strategy)) +
theme_bw() +
theme(legend.position = c(.2, .8)) +
scale_linetype_manual("FindSuccesor Strategy" ,labels = c("Strategy 1", "Strategy 2"), values = c("dashed", "solid")) +
#ggtitle("Comparing find successor strategies") +
labs(y = "Number of messages exchanged", x = "Number of peers in network") +
ggsave(file="Comparing find successor strategies1.png",  width = 15.875, height=11.985625, units = "cm", dpi=300)
print(plot)
library(ggplot2)
#setwd("~/Dropbox/SDN/DTRM/Paper/Plots")
df <- read.csv("./Data_nofix_withDelay.csv")
df$joinTime <- df$joinTime/10
plot <- ggplot(df, aes(x=n)) +
#geom_point(aes(y = msg)) +
geom_line(aes(y = joinTime, linetype=strategy)) +
theme_bw() +
theme(legend.position = c(.2, .8)) +
scale_linetype_manual("FindSuccesor Strategy" ,labels = c("Strategy 1", "Strategy 2"), values = c("dashed", "solid")) +
#ggtitle("Comparing find successor strategies") +
labs(y = "Join network time (ms)", x = "Number of peers in network") +
ggsave(file="Comparing find successor strategies.png",  width = 15.875, height=11.985625, units = "cm", dpi=300)
print(plot)
